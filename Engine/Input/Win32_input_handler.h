////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2009 Alexander Poluektov
// All rights reserved
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// $Id: //depot/main/Engine/Input/Win32_input_handler.h#3 $
// $DateTime: 2009/08/12 18:51:31 $

// Input handler that works with Win32 messages.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef ENGINE_INPUT_WIN32_INPUT_HANDLER_H_INCLUDED
#define ENGINE_INPUT_WIN32_INPUT_HANDLER_H_INCLUDED

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Engine/Input/Input_handler.h"

#include "boost/shared_ptr.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace Engine
{

class Window;

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace Engine
{
namespace Input
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct Input_state;

/// Platform specific input hanlder.
/// Uses OS message handling.
class Win32_input_handler : public Input_handler
{
public:
   Win32_input_handler(Window& window);
   ~Win32_input_handler();
   // copying is disallowed via base class

// Input_handler interface
public:

   virtual bool is_key_pressed(Key_code key)    const;
   virtual bool is_left_mouse_button_pressed()  const;
   virtual bool is_right_mouse_button_pressed() const;
   virtual Mouse_coords get_mouse_coords()      const;
   virtual Mouse_wheel get_mouse_wheel_delta()  const;

private:

   boost::shared_ptr<Input_state> m_input_state;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace Input
} // namespace Engine

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // ENGINE_INPUT_WIN32_INPUT_HANDLER_H_INCLUDED

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
